// Dezyne --- Dezyne command line tools
//
// Copyright Â© 2022 Rutger van Beusekom <rutger@dezyne.org>
//
// This file is part of Dezyne.
//
// Dezyne is free software: you can redistribute it and/or modify it
// under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// Dezyne is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public
// License along with Dezyne.  If not, see <http://www.gnu.org/licenses/>.
//
// Commentary:
//
// In this model the defer keyword is demonstrated, including the
// implicit cancellation by the cruel event as a result of a state
// change.  Note that the provides port state is ignored by defer and
// cannot be used for this purpose.  Defer enables implementing an
// asynchronous interface without the use of any auxiliary ports.
//
// Code:

interface icruelhelloworld
{
  in void hello ();
  in void cruel ();
  out void world ();
  behavior
  {
    bool idle = true;
    on cruel: idle = true;
    [idle] on hello: idle = false;
    [!idle] on inevitable: {
      idle = true;
      world;
    }
  }
}
component hello_defer
{
  provides icruelhelloworld h;
  behavior
  {
    bool idle = true;
    on h.cruel (): idle = true;
    on h.hello (): {
      idle = false;
      defer {
        idle = true;
        h.world ();
      }
    }
  }
}
